@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Album Update/Delete");

    var pid = Request.QueryString["pid"];
    if (pid.IsEmpty())
    {
        Response.Redirect("Exercise04_A.cshtml");
    }
    //consider your need for global variables
    var albumName = Request.Form["Title"];
    var artistid = Request.Form["ArtistId"];
    var albumYear = Request.Form["ReleaseYear"];
    var albumLabel = Request.Form["ReleaseLabel"];

    var db = Database.Open("Chinook");
    var artistquery = "SELECT ArtistId, Name "
            + "FROM Artists "
            + "Order by Name";
    var artistlist = db.Query(artistquery);
    int artListLen = artistlist.Count();

    var message = "";

    var queryStatement = @"SELECT AlbumId, Title, ArtistId, ReleaseYear, ReleaseLabel "
                        + "FROM Albums "
                        + "WHERE AlbumId = @0 ";
    var queryProducts = db.QuerySingle(queryStatement, pid);


    //these are validator controls execute on the server side

    Validation.Add("Title",
         Validator.Required("Album name is required"),
         Validator.StringLength(160, 1, "Album name is limited to 40 characters"));

    Validation.Add("ArtistList",
         Validator.Range(1, artistlist.Count(), "Artist is required"));

    Validation.Add("AlbumYear",
        Validator.Required("Album Year is required"),
        Validator.Integer("Album Year must be a number."),
        Validator.Range(1950, DateTime.Today.Year, "Album Year must be between 1950 and Today"));

    Validation.Add("AlbumLabel",
        Validator.StringLength(50, 0, "Album label is limited to 40 characters"));

}


@section banner{
    <h1>@Page.Title</h1>
}


@if (IsPost)
{
    albumName = Request.Form["Title"];
    artistid = Request.Form["ArtistList"];
    albumYear = Request.Form["AlbumYear"];
    albumLabel = Request.Form["AlbumLabel"];
    var theButton = Request.Form["theButton"];

    if (theButton.Equals("backtosearch"))
    {
        Response.Redirect("Exercise04_A.cshtml");
    }

    if (Validation.IsValid())
    {
        try
        {

            if (theButton.Equals("update"))
            {
                var sqlcommand = @"UPDATE Albums SET "
                                + "Title = @0, "
                                + "ArtistId = @1, "
                                + "ReleaseYear = @2, "
                                + "ReleaseLabel = @3 "
                                + "WHERE AlbumId = @4 ";
                var rowsaffected = db.Execute(sqlcommand, albumName, artistid, int.Parse(albumYear), string.IsNullOrEmpty(albumLabel) ? null : albumLabel, pid);
                if (rowsaffected > 0)
                {
                    message = "Album has been UPDATED";
                }
                else
                {
                    message = "Album NOT found";
                }
            }
            else if (theButton.Equals("delete"))
            {

                var deleteStatement = "Delete Albums Where AlbumId = @0";
                var rows = db.Execute(deleteStatement, pid);
                if (rows == 1)
                {
                    message = "Album has been DELETED";
                }
                else
                {
                    message = "Album NOT found";
                }
                albumName = "";
                artistid = "0";
                albumYear = "0";
                albumLabel = "";

            }
        }
        catch (Exception ex)
        {
            <div class="col-12 text-center">
                <p style="color:firebrick; font-size:large">
                    Processing error: @ex.Message
                </p>
            </div>
        }
    }
}
else //IsPost=false
{
    //load initial data

    albumName = queryProducts.Title;
    albumYear = queryProducts.ReleaseYear.ToString();
    artistid = queryProducts.ArtistId.ToString();
    albumLabel = queryProducts.ReleaseLabel;


}
@Html.ValidationSummary()
<div class="col-12 text-center">
    <p style="color:green">
        @message
    </p>
</div>
<form id="theForm" action="" method="post">
    <div class="row row-cols-2">

        <div class="col text-right">
            <label id="lblAlbumID" for="AlbumID">Album ID</label>
        </div>
        <div class="col text-left">
            <input type="text" name="AlbumID" value="@pid" readonly />
        </div><br />

        <div class="col text-right">
            <label id="lblTitle" for="Title">Album Name:</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value="@albumName" />
        </div><br />

        <div class="col text-right">
            <label id="lblArtistList" for="ArtistList">Artist:</label>
        </div>
        <div class="col text-left">
            <select name="ArtistList">
                <option value="@artistid">select from @artistlist.Count() records ...</option>
                @foreach (var acollectionrow in artistlist)
                {
                    if (acollectionrow.ArtistId.ToString() == artistid)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>
        </div><br />

        <div class="col text-right">
            <label id="lblAlbumYear" for="AlbumYear">Release Year:</label>
        </div>
        <div class="col text-left">
            <input type="text" name="AlbumYear" value="@albumYear" />
        </div><br />

        <div class="col text-right">
            <label id="lblAlbumLabel" for="AlbumLabel">Release Label:</label>
        </div>
        <div class="col text-left">
            <input type="text" name="AlbumLabel" value="@albumLabel" />
        </div><br />
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <button type="submit" name="theButton" id="theUpdate" class="btn btn-primary"
                    value="update">
                Update
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theDelete" class="btn btn-primary" formnovalidate
                    value="delete">
                Delete Record
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theCancel" class="btn btn-primary" formnovalidate
                    value="backtosearch">
                Back to Search
            </button>
        </div>
    </div>
    @* confirmation can be done on a button click using javascript
        we will ask the user to confirm the insertion of a product*@
    <script type="text/javascript">
        document.getElementById("theUpdate").onclick = ConfirmUpdate;
        function ConfirmUpdate() {
            return confirm("Are you sure you want to Update @albumName?");
        }
        document.getElementById("theDelete").onclick = ConfirmDelete;
        function ConfirmDelete() {
            return confirm("Are you sure you want to Delete @albumName?");
        }
    </script>

</form>